using System;
using System.Collections.Generic;
using System.Linq;
using Shouldly;
using Xunit;

namespace Euler
{
	/*
	 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting 
	 with 1 and 2, the first 10 terms will be:

		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the 
	 sum of the even-valued terms.
	 */
	public class Problem2
    {
	    public int FindEvenFibonacciNumbers()
	    {
		    var sum = 2;
		    var twoBackNumber = 1;
		    var oneBackNumber = 2;
		    int fibonnacciNumber = 0;
		    do
		    {
			    fibonnacciNumber = twoBackNumber + oneBackNumber;
			    if (fibonnacciNumber % 2 == 0)
			    {
				    sum += fibonnacciNumber;
			    }

			    twoBackNumber = oneBackNumber;
			    oneBackNumber = fibonnacciNumber;
		    } while (fibonnacciNumber < 4000000);

			return sum;
	    }
    }

	public class Problem2Tests
	{
		[Fact]
		public void Answer()
		{
			var sumOfAllMultiples = new Problem2().FindEvenFibonacciNumbers();

			sumOfAllMultiples.ShouldBe(4613732);
		}
	}
}
